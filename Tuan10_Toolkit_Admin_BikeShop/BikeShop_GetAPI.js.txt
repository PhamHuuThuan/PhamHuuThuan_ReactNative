import React, { useState, useEffect } from 'react';
import { StyleSheet, Text, View, Image, Pressable, FlatList} from 'react-native';
import { NavigationContainer, useNavigation} from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';
import { createSlice, configureStore } from '@reduxjs/toolkit';
import { Provider, useDispatch, useSelector } from 'react-redux';
import { FontAwesome } from '@expo/vector-icons';
import * as Font from 'expo-font';
import AppLoading from 'expo-app-loading';

function HomeScreen(){
  const [fontsLoaded, setFontsLoaded] = useState(false);

  const loadFonts = async () => {
    await Font.loadAsync({
      'VT323': require('./assets/VT323-Regular.ttf'), // Adjust the path if necessary
      'Voltaire': require('./assets/Voltaire-Regular.ttf'),
    });
    setFontsLoaded(true);
  };

  useEffect(() => {
    loadFonts();
  }, []);

  if (!fontsLoaded) {
    return <AppLoading />;
  }
  const navigation = useNavigation();
  return (
    <View style={styles.container}>
      <View>
        <Text style={{fontFamily: 'VT323', fontSize: 26, fontWeight: '400', textAlign: 'center', width: 351, marginTop: 50}}>A premium online store for sporter and their stylish choice</Text>
      </View>
      <View style={styles.backgroundImage}>
        <Image source={{uri: 'https://s3-alpha-sig.figma.com/img/b657/871f/5c0d8c0f67fc78f523516fd7768fec28?Expires=1731888000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=lF5Gn8hEujcOtdsOXxMA7b5AMTsxXVS6iLGImXqx0jqYTUl3RifpEJ1AwcQGANUVu4aC6Eq8SXgPXNiKkErJ9ft6iTqrFLdWEGTtbG38azVAswCRRG7DJLvWIrFaO0A-PCbDsnqM0REdeSaFBsm9dZY1LMTMeuWSD5HJxarXinZ8iya4FAVrjd3QCft2Pd4SMsoesz1B8NnL7LGWP-z4TYJ14-xW7BEYEVpfJmGYJ2auuW7fodRnWGDaM-Ywrrl0lwDUHsJKgTuuteLQljeKew4vrPxn3QcL~J5s5AGypOZPnFjxcefDzz6A0Nb-sIT0V9NUuAizCfCbOJ8Cm4KIag__'}} style={styles.imageProduct}/>
      </View>
      <View>
        <Text style={{fontFamily: 'Ubutu', fontSize: 26, fontWeight: '700', textAlign: 'center', width: 351}}>POWER BIKE {'\n'} SHOP</Text>
      </View>
      <Pressable style={styles.btnStart} onPress={()=> navigation.navigate('ListProduct')}>
        <Text style={{fontFamily: 'VT323', fontSize: 26, fontWeight: '400', textAlign: 'center', color: 'white', width: 351}}>Get started</Text>
      </Pressable>
    </View>
  );
}
// Define Item Component
const Item = ({ item }) => {
  const [isHovered, setIsHovered] = useState(false); 
  const navigation = useNavigation();
  
  return (
    <View style={styles.backgroundItem}>
      <Pressable
        style={[styles.backgroundItem, isHovered && styles.shadow]}
        onPress={() => navigation.navigate('DetailProduct', { item })}
        onHoverIn={() => setIsHovered(true)}
        onHoverOut={() => setIsHovered(false)}
      >
        <View>
          <FontAwesome name="heart-o" size={24} color="gray" style={{ top: 10, left: -5 }} />
          <Image source={{ uri: item.img }} style={styles.imgProduct} />
        </View>
        <Text style={styles.nameProduct}>{item.name}</Text>
        <Text style={styles.nameProduct}>
          <Text style={{ color: 'rgba(247, 186, 131, 1)' }}>$</Text> {item.price}
        </Text>
      </Pressable>
    </View>
  );
};

// Define ListProductScreen Component
function ListProductScreen() {
  const navigation = useNavigation();
  const [products, setProducts] = useState([]);  // State to store products
  const [selected, setSelected] = useState('All'); // State for filter selection

  // Fetch data from API when the component mounts
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch('https://672ad685976a834dd0248dd2.mockapi.io/Bikes');
        const data = await response.json();
        setProducts(data); // Store data in the state
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };
    
    fetchData();
  }, []);

  // Filter the products based on the selected category
  const filteredProducts = products.filter(product => 
    selected === 'All' || product.type === selected
  );

  return (
    <View style={styles.container}>
      <View style={{ paddingTop: 40 }}>
        <Text style={{ color: 'rgba(233, 65, 65, 1)', fontSize: 25, fontWeight: '700' }}>
          The world’s Best Bike
        </Text>
      </View>
      <View style={styles.filterArea}>
        <Pressable style={styles.filterBtn} onPress={() => setSelected('All')}>
          <Text style={{ color: selected === 'All' ? 'red' : 'gray', fontSize: 20 }}>All</Text>
        </Pressable>
        <Pressable style={styles.filterBtn} onPress={() => setSelected('Roadbike')}>
          <Text style={{ color: selected === 'Road Bike' ? 'red' : 'gray', fontSize: 20 }}>Road Bike</Text>
        </Pressable>
        <Pressable style={styles.filterBtn} onPress={() => setSelected('Mountain')}>
          <Text style={{ color: selected === 'Mountain' ? 'red' : 'gray', fontSize: 20 }}>Mountain</Text>
        </Pressable>
      </View>
      <View style={styles.listProduct}>
        <FlatList
          data={filteredProducts} // Use filtered products
          renderItem={({ item }) => <Item item={item} />}
          numColumns={2}
          showsVerticalScrollIndicator={false}
        />
      </View>
    </View>
  );
}
function DetailProductScreen({route}){
  const {item} = route.params;
  const navigation = useNavigation();
  return (
    <View style={styles.container}>
      <View style={styles.backgroundImage}>
        <Image source={item.img} style={styles.imageProduct}/>
      </View>
      <View style={{width: '95%', alignItems: 'flex-start'}}>
          <Text style={{fontSize: 35, fontFamily: 'Voltaire', fontWeight: '400'}}>{item.name}</Text>
      </View>
      <View style={{width: '95%', alignItems: 'flex-start', flexDirection: 'row', justifyContent: 'space-between', marginTop: 20}}>
          <Text style={{fontSize: 25, fontFamily: 'Voltaire', fontWeight: '400', color: 'rgba(0, 0, 0, 0.59)'}}>{item.discount}% OFF|{item.price*(100-item.discount)/100}$</Text>
          <Text style={{fontSize: 35,  width: '50%',
          fontFamily: 'Voltaire', fontWeight: '400', 
          color: 'rgba(0, 0, 0, 1)', 
          textDecorationLine: 'line-through'}}>{item.price}</Text>
      </View>
      <View style={{width: '95%', alignItems: 'flex-start'}}>
          <Text style={{fontSize: 25, fontFamily: 'Voltaire', fontWeight: '400', marginBottom: 20}}>Description</Text>
      </View>
      <View style={{width: '95%', alignItems: 'flex-start'}}>
          <Text style={{fontSize: 22, fontFamily: 'Voltaire', fontWeight: '400', color: 'rgba(0, 0, 0, 0.57)'}}>{item.desc}</Text>
      </View>
      <View position='relative' style={{flexDirection: 'row', marginTop: 50}}>
        <FontAwesome name="heart-o" size={35} color="gray" style={{ top: 10, left: -10}} />
        <Pressable style={{width: 269, height: 54, backgroundColor: 'rgba(233, 65, 65, 1)', borderRadius: 30, justifyContent: 'center', alignItems: 'center'}}
        onPress={()=> navigation.navigate('Home')}>
          <Text style={{fontFamily: 'Voltaire', fontSize: 26, fontWeight: '400', textAlign: 'center', color: 'white', width: 351}}>Add to card</Text>
        </Pressable>
      </View>
    </View>
  );
}

const Stack = createNativeStackNavigator();

export default function App() {
  return (
    <NavigationContainer independent={true}>
      <Stack.Navigator initialRouteName="Home">
        <Stack.Screen 
          name="Home" 
          component={HomeScreen} 
          options={{ headerShown: false }} // Ẩn tên màn hình
        />
        <Stack.Screen
          name="ListProduct"
          component={ListProductScreen} 
          options={{ headerShown: false }} // Ẩn tên màn hình
        />
          <Stack.Screen
          name="DetailProduct"
          component={DetailProductScreen} 
          options={{ headerShown: false }} // Ẩn tên màn hình
        />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'white',
    padding: 8,
    justifyContent: 'flex-start',
    textAlign: 'center',
    alignItems: 'center',
  },
  imageProduct:{
    width: 292,
    height: 270
  },
  backgroundImage:{
    backgroundColor: 'rgba(233, 65, 65, 0.1)',
    width: 359,
    height: 359,
    borderRadius: 50,
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 20,
    marginTop: 20
  },
  btnStart:{
    backgroundColor: 'rgba(233, 65, 65, 1)',
    width: 340,
    height: 61,
    borderRadius: 50,
    justifyContent: 'center',
    alignItems: 'center',
    marginTop: 100,
    marginBottom: 50
  },
  filterArea:{
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingTop: 30,
    paddingBottom: 15
  },
  filterBtn:{
    width: 99,
    height: 32,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 1,
    borderColor: 'rgba(233, 65, 65, 0.53)',
    borderRadius: 5,
    margin: 5
  },
  imgProduct:{
    width: 135,
    height: 127
  },
  listProduct:{
    flex: 1
  },
  backgroundItem:{
    position: 'relative',
    backgroundColor: 'rgba(247, 186, 131, 0.15)',
    width: 167,
    height: 200,
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 10,
    margin: 10
  },
  nameProduct:{
    fontSize: 20,
    fontFamily: 'Voltaire',
    color: 'rgba(0, 0, 0, 0.6)'
  },
  shadow: {
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 10 },
    shadowOpacity: 0.25,
    shadowRadius: 10,
    elevation: 5,
  }
});