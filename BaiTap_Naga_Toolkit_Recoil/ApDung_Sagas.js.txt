import React, { useEffect } from 'react';
import { Text, SafeAreaView, StyleSheet, Image, View, TextInput, Pressable, FlatList } from 'react-native';
import { Provider, useDispatch, useSelector } from 'react-redux';
import { createStore, applyMiddleware } from 'redux';
import createSagaMiddleware from 'redux-saga';
import { call, put, takeEvery } from 'redux-saga/effects';
import { NavigationContainer } from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';

// Action Types
const FETCH_WORK_LIST = 'FETCH_WORK_LIST';
const SET_WORK_LIST = 'SET_WORK_LIST';
const TOGGLE_SHOW_ALL = 'TOGGLE_SHOW_ALL';

// Actions
const fetchWorkList = () => ({ type: FETCH_WORK_LIST });
const setWorkList = (workList) => ({ type: SET_WORK_LIST, workList });
const toggleShowAll = () => ({ type: TOGGLE_SHOW_ALL });

// Reducer
const initialState = { workList: [], showAll: false };
const workReducer = (state = initialState, action) => {
  switch (action.type) {
    case SET_WORK_LIST:
      return { ...state, workList: action.workList };
    case TOGGLE_SHOW_ALL:
      return { ...state, showAll: !state.showAll };
    default:
      return state;
  }
};

// Saga
function* fetchWorkListSaga() {
  try {
    const response = yield call(fetch, 'https://api.mockfly.dev/mocks/dc3b614f-8950-4616-8e47-5c81a3e46d64/ToDoList');
    const data = yield response.json();
    yield put(setWorkList(data));
  } catch (error) {
    console.error(error);
  }
}

function* rootSaga() {
  yield takeEvery(FETCH_WORK_LIST, fetchWorkListSaga);
}

// Store configuration
const sagaMiddleware = createSagaMiddleware();
const store = createStore(workReducer, applyMiddleware(sagaMiddleware));
sagaMiddleware.run(rootSaga);

// Main Component
const Screen02 = () => {
  const name = "Huu Thuan";
  const dispatch = useDispatch();
  const { workList, showAll } = useSelector((state) => state);
  const [filteredList, setFilteredList] = React.useState([]);
  const [searchText, setSearchText] = React.useState("");

  useEffect(() => {
    dispatch(fetchWorkList());
  }, [dispatch]);

  useEffect(() => {
    const filtered = workList.filter((item) =>
      item.workname.toLowerCase().includes(searchText.toLowerCase())
    );
    setFilteredList(showAll ? filtered : filtered.slice(0, 6));
  }, [searchText, workList, showAll]);

  const handleToggleShowAll = () => {
    dispatch(toggleShowAll());
  };

  const Item = ({ item }) => (
    <View style={styles.itemContainer}>
      <Text>{item.id}</Text>
      <Image source={{ uri: 'https://snack-code-uploads.s3.us-west-1.amazonaws.com/~asset/c38d74598c0b3e67b3ab2e7d5b55e5a5' }} style={{ width: 24, height: 24 }} />
      <Text style={{ width: '80%', fontWeight: 'bold', fontSize: 17 }}>{item.workname}</Text>
    </View>
  );

  return (
    <SafeAreaView style={styles.container}>
      <View style={{ flexDirection: 'row', width: '90%', justifyContent: 'space-between', marginTop: 20 }}>
        <Pressable onPress={() => navigation.navigate('Screen01')}>
          <Image source={{ uri: 'https://snack-code-uploads.s3.us-west-1.amazonaws.com/~asset/cfb5b067658032fd1870f734369d041b' }} style={{ width: 36, height: 36 }} />
        </Pressable>
        <View style={{ flexDirection: 'row' }}>
          <Image source={{ uri: 'https://snack-code-uploads.s3.us-west-1.amazonaws.com/~asset/1e56b0d9da173efc560ae741f025d2f1' }} style={{ width: 50, height: 50 }} />
          <View style={{ justifyContent: 'center', marginLeft: 20 }}>
            <Text style={{ fontSize: 20, fontWeight: 'bold' }}>Hi {name}</Text>
            <Text style={{ fontWeight: 'bold', color: 'gray' }}>Have a great day ahead</Text>
          </View>
        </View>
      </View>
      <View style={{ width: '90%', height: 50, borderWidth: 1, borderRadius: 5, paddingLeft: 10, flexDirection: 'row', alignItems: 'center', marginTop: 20, marginBottom: 30 }}>
        <Pressable>
          <Image source={{ uri: 'https://snack-code-uploads.s3.us-west-1.amazonaws.com/~asset/521740a6d006bd5f58a933046126a6e3' }} style={{ width: 24, height: 24 }} />
        </Pressable>
        <TextInput
          style={{ width: '90%', height: 50, fontSize: 20, marginLeft: 10, paddingLeft: 10, color: 'gray' }}
          placeholder="Search"
          value={searchText}
          onChangeText={setSearchText}
        />
      </View>
      <FlatList data={filteredList} renderItem={({ item }) => <Item item={item} />} numColumns={1} style={{ width: 400 }} />
      <Pressable style={styles.button} onPress={handleToggleShowAll}>
        <Text style={{ color: '#fff' }}>{showAll ? 'See Less' : 'See More'}</Text>
      </Pressable>
    </SafeAreaView>
  );
};

// App Component with Navigation
const Stack = createNativeStackNavigator();

const App = () => (
  <Provider store={store}>
    <NavigationContainer independent={true}>
      <Stack.Navigator initialRouteName="Screen02">
        <Stack.Screen name="Screen02" component={Screen02} options={{ headerShown: false }} />
      </Stack.Navigator>
    </NavigationContainer>
  </Provider>
);

export default App;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#fff',
    paddingLeft: 20,
  },
  itemContainer: {
    width: '90%',
    height: 50,
    backgroundColor: 'lightgray',
    flexDirection: 'row',
    justifyContent: 'space-evenly',
    alignItems: 'center',
    paddingLeft: 20,
    paddingRight: 20,
    borderRadius: 30,
    marginBottom: 20,
  },
  button: {
    backgroundColor: 'blue',
    width: 280,
    height: 50,
    borderRadius: 10,
    justifyContent: 'center',
    alignItems: 'center',
    marginTop: 30,
  },
});
